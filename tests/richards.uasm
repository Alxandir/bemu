	| compiled by gcc-beta based on gcc v3.2.2
	| source file "richards.c"
        || Edited somewhat to fix gcc-beta bugs.

.include beta.uasm
	BR (__start)

        HALT()
        HALT()
        HALT()
        HALT()
        HALT()
        HALT()
        HALT()
        HALT()

	.align 4
alphabet:
	.ascii "0ABCDEFGHIJKLMNOPQRSTUVWXYZ\0"
	.align 4
tasktab:
   LONG(0)
   LONG(0)
   LONG(0)
   LONG(0)
   LONG(0)
   LONG(0)
   LONG(0)
   LONG(0)
   LONG(0)
   LONG(0)
   LONG(0)
	.align 4
tasklist:
        LONG(0)
	.align 4
qpktcount:
        LONG(0)
	.align 4
holdcount:
        LONG(0)
	.align 4
layout:
        LONG(0)

	.align 4
_LC0:
	LONG (tasks)

	.align 4
_LC1:
	LONG (tasktab)

	.align 4
_LC2:
	LONG (tasklist)

	.align 4
createtask:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (1)
	PUSH (R1)
	LD (BP, -12, R0)
	MULC (R0, 32, R1)
	LDR (_LC0, R0)
	SUBC (R0, 32, R0)
	ADD (R1, R0, R0)
	ST (R0, 0, BP)
	LDR (_LC1, R1)
	LD (BP, -12, R0)
	MULC (R0, 4, R0)
	ADD (R0, R1, R1)
	LD (BP, 0, R0)
	ST (R0, 0, R1)
	LD (BP, 0, R1)
	LDR (_LC2, R0)
	LD (R0, 0, R0)
	ST (R0, 0, R1)
	LD (BP, 0, R1)
	LD (BP, -12, R0)
	ST (R0, 4, R1)
	LD (BP, 0, R1)
	LD (BP, -16, R0)
	ST (R0, 8, R1)
	LD (BP, 0, R1)
	LD (BP, -20, R0)
	ST (R0, 12, R1)
	LD (BP, 0, R1)
	LD (BP, -24, R0)
	ST (R0, 16, R1)
	LD (BP, 0, R1)
	LD (BP, -28, R0)
	ST (R0, 20, R1)
	LD (BP, 0, R1)
	LD (BP, -32, R0)
	ST (R0, 24, R1)
	LD (BP, 0, R1)
	LD (BP, -36, R0)
	ST (R0, 28, R1)
	LDR (_LC2, R1)
	LD (BP, 0, R0)
	ST (R0, 0, R1)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
pkt:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (1)
	PUSH (R1)
	PUSH (R2)
	PUSH (R3)
	ST (R31, 0, BP)
_L3:
	LD (BP, 0, R0)
	CMOVE (3, R1)
	CMPLE (R0, R1, R0)
	BT (R0, _L6)
	BR (_L4)
_L6:
	LD (BP, -12, R1)
	LD (BP, 0, R0)
	ADD (R1, R0, R0)
	ADDC (R0, 16, R0)
	ANDC (R0, -4, R3)
	ANDC (R0, 3, R0)
	MULC (R0, 8, R0)
	MOVE (R31, R1)
	SHL (R31, R0, R2)
	SHL (R1, R0, R0)
	AND (R2, R0, R2)
	XORC (R0, -1, R1)
	LD (R3, 0, R0)
	AND (R0, R1, R0)
	OR (R0, R2, R0)
	ST (R0, 0, R3)
	LD (BP, 0, R0)
	ADDC (R0, 1, R0)
	ST (R0, 0, BP)
	BR (_L3)
_L4:
	LD (BP, -12, R1)
	LD (BP, -16, R0)
	ST (R0, 0, R1)
	LD (BP, -12, R1)
	LD (BP, -20, R0)
	ST (R0, 4, R1)
	LD (BP, -12, R1)
	LD (BP, -24, R0)
	ST (R0, 8, R1)
	LD (BP, -12, R0)
	ST (R31, 12, R0)
	LD (BP, -12, R0)
	POP (R3)
	POP (R2)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC3:
	LONG (tcb)

	.align 4
_LC4:
	LONG (taskid)

	.align 4
_LC5:
	LONG (v1)

	.align 4
_LC6:
	LONG (v2)

	.align 4
_LC7:
        LONG(_L21)
	.align 4
schedule:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (3)
	PUSH (R1)
	PUSH (R2)
	PUSH (R3)
	OR (R31, R31, R31)
_L8:
	LDR (_LC3, R0)
	LD (R0, 0, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L10)
	BR (_L7)
_L10:
	ST (R31, 0, BP)
	LDR (_LC3, R0)
	LD (R0, 0, R0)
	ST (R0, 8, BP)
	LD (BP, 8, R0)
	LD (R0, 16, R3)
	CMOVE (7, R1)
	XOR (R3, R1, R0)
	CMPLT (R0, R31, R2)
	CMPLE (R3, R1, R0)
	XOR (R2, R0, R0)
	BEQ (R0, _L7)
	LD (BP, 8, R1)
	LD (R1, 16, R0)
	MULC (R0, 4, R1)
	LDR (_LC7, R0)
	ADD (R1, R0, R0)
	LD (R0, 0, R0)
	JMP (R0)
	.align 4
	.align 4
_L21:
	LONG (_L14 + PC_SUPERVISOR)
	LONG (_L14 + PC_SUPERVISOR)
	LONG (_L19 + PC_SUPERVISOR)
	LONG (_L12 + PC_SUPERVISOR)
	LONG (_L19 + PC_SUPERVISOR)
	LONG (_L19 + PC_SUPERVISOR)
	LONG (_L19 + PC_SUPERVISOR)
	LONG (_L19 + PC_SUPERVISOR)
_L12:
	LDR (_LC3, R0)
	LD (R0, 0, R0)
	LD (R0, 12, R0)
	ST (R0, 0, BP)
	LDR (_LC3, R0)
	LD (R0, 0, R1)
	LD (BP, 0, R0)
	LD (R0, 0, R0)
	ST (R0, 12, R1)
	LDR (_LC3, R0)
	LD (R0, 0, R2)
	LDR (_LC3, R0)
	LD (R0, 0, R0)
	LD (R0, 12, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	CMPEQ (R0, R31, R0)
	ST (R0, 16, R2)
_L14:
	LDR (_LC4, R1)
	LDR (_LC3, R0)
	LD (R0, 0, R0)
	LD (R0, 4, R0)
	ST (R0, 0, R1)
	LDR (_LC5, R1)
	LDR (_LC3, R0)
	LD (R0, 0, R0)
	LD (R0, 24, R0)
	ST (R0, 0, R1)
	LDR (_LC6, R1)
	LDR (_LC3, R0)
	LD (R0, 0, R0)
	LD (R0, 28, R0)
	ST (R0, 0, R1)
	LDR (_LC3, R0)
	LD (R0, 0, R1)
	LD (BP, 0, R0)
	PUSH (R0)
	LD (R1, 20, R0)
	JMP (R0, LP)
	DEALLOCATE (1)
	ST (R0, 4, BP)
	LDR (_LC3, R0)
	LD (R0, 0, R1)
	LDR (_LC5, R0)
	LD (R0, 0, R0)
	ST (R0, 24, R1)
	LDR (_LC3, R0)
	LD (R0, 0, R1)
	LDR (_LC6, R0)
	LD (R0, 0, R0)
	ST (R0, 28, R1)
	LDR (_LC3, R1)
	LD (BP, 4, R0)
	ST (R0, 0, R1)
	BR (_L8)
_L19:
	LDR (_LC3, R1)
	LDR (_LC3, R0)
	LD (R0, 0, R0)
	LD (R0, 0, R0)
	ST (R0, 0, R1)
	BR (_L8)
_L7:
	POP (R3)
	POP (R2)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC8:
	LONG (tcb)

	.align 4
Wait:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	PUSH (R1)
	LDR (_LC8, R0)
	LD (R0, 0, R1)
	LDR (_LC8, R0)
	LD (R0, 0, R0)
	LD (R0, 16, R0)
	ORC (R0, 2, R0)
	ST (R0, 16, R1)
	LDR (_LC8, R0)
	LD (R0, 0, R0)
	POP (R1)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC9:
	LONG (holdcount)

	.align 4
_LC10:
	LONG (tcb)

	.align 4
holdself:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	PUSH (R1)
	LDR (_LC9, R1)
	LDR (_LC9, R0)
	LD (R0, 0, R0)
	ADDC (R0, 1, R0)
	ST (R0, 0, R1)
	LDR (_LC10, R0)
	LD (R0, 0, R1)
	LDR (_LC10, R0)
	LD (R0, 0, R0)
	LD (R0, 16, R0)
	ORC (R0, 4, R0)
	ST (R0, 16, R1)
	LDR (_LC10, R0)
	LD (R0, 0, R0)
	LD (R0, 0, R0)
	POP (R1)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC11:
	LONG (tasktab)

	.align 4
findtcb:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (1)
	PUSH (R1)
	ST (R31, 0, BP)
	LD (BP, -12, R0)
	MOVE (R31, R1)
	CMPLE (R0, R1, R0)
	BT (R0, _L25)
	LD (BP, -12, R0)
	CMOVE (10, R1)
	CMPLE (R0, R1, R0)
	BF (R0, _L25)
	LDR (_LC11, R1)
	LD (BP, -12, R0)
	MULC (R0, 4, R0)
	ADD (R0, R1, R0)
	LD (R0, 0, R0)
	ST (R0, 0, BP)
_L25:
	LD (BP, 0, R0)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC12:
        LONG(65531)
	.align 4
_LC13:
	LONG (tcb)

	.align 4
release:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (2)
	PUSH (R1)
	PUSH (R2)
	LD (BP, -12, R0)
	PUSH (R0)
	BR (findtcb, LP)
	DEALLOCATE (1)
	ST (R0, 0, BP)
	LD (BP, 0, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L27)
	MOVE (R31, R0)
	ST (R0, 4, BP)
	BR (_L26)
_L27:
	LD (BP, 0, R2)
	LD (BP, 0, R0)
	LD (R0, 16, R1)
	LDR (_LC12, R0)
	AND (R1, R0, R0)
	ST (R0, 16, R2)
	LD (BP, 0, R1)
	LDR (_LC13, R0)
	LD (R0, 0, R0)
	LD (R1, 8, R1)
	LD (R0, 8, R0)
	CMPLE (R1, R0, R0)
	BT (R0, _L28)
	LD (BP, 0, R0)
	ST (R0, 4, BP)
	BR (_L26)
_L28:
	LDR (_LC13, R0)
	LD (R0, 0, R0)
	ST (R0, 4, BP)
_L26:
	LD (BP, 4, R0)
	POP (R2)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC14:
	LONG (qpktcount)

	.align 4
_LC15:
	LONG (taskid)

	.align 4
_LC16:
	LONG (tcb)

	.align 4
qpkt:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (2)
	PUSH (R1)
	LD (BP, -12, R0)
	LD (R0, 4, R0)
	PUSH (R0)
	BR (findtcb, LP)
	DEALLOCATE (1)
	ST (R0, 0, BP)
	LD (BP, 0, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L30)
	LD (BP, 0, R0)
	ST (R0, 4, BP)
	BR (_L29)
_L30:
	LDR (_LC14, R1)
	LDR (_LC14, R0)
	LD (R0, 0, R0)
	ADDC (R0, 1, R0)
	ST (R0, 0, R1)
	LD (BP, -12, R0)
	ST (R31, 0, R0)
	LD (BP, -12, R1)
	LDR (_LC15, R0)
	LD (R0, 0, R0)
	ST (R0, 4, R1)
	LD (BP, 0, R0)
	LD (R0, 12, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L31)
	LD (BP, 0, R1)
	LD (BP, -12, R0)
	ST (R0, 12, R1)
	LD (BP, 0, R1)
	LD (BP, 0, R0)
	LD (R0, 16, R0)
	ORC (R0, 1, R0)
	ST (R0, 16, R1)
	LD (BP, 0, R1)
	LDR (_LC16, R0)
	LD (R0, 0, R0)
	LD (R1, 8, R1)
	LD (R0, 8, R0)
	CMPLE (R1, R0, R0)
	BT (R0, _L33)
	LD (BP, 0, R0)
	ST (R0, 4, BP)
	BR (_L29)
_L31:
	LD (BP, 0, R0)
	ADDC (R0, 12, R0)
	PUSH (R0)
	LD (BP, -12, R0)
	PUSH (R0)
	BR (append, LP)
	DEALLOCATE (2)
_L33:
	LDR (_LC16, R0)
	LD (R0, 0, R0)
	ST (R0, 4, BP)
_L29:
	LD (BP, 4, R0)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC17:
	LONG (v2)

	.align 4
_LC18:
	LONG (v1)

	.align 4
_LC19:
        LONG(53256)
	.align 4
idlefn:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (1)
	PUSH (R1)
	PUSH (R2)
	LDR (_LC17, R1)
	LDR (_LC17, R0)
	LD (R0, 0, R0)
	SUBC (R0, 1, R0)
	ST (R0, 0, R1)
	LDR (_LC17, R0)
	LD (R0, 0, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L35)
	BR (holdself, LP)
	ST (R0, 0, BP)
	BR (_L34)
_L35:
	LDR (_LC18, R0)
	LD (R0, 0, R0)
	ANDC (R0, 1, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L36)
	LDR (_LC18, R1)
	LDR (_LC18, R0)
	LD (R0, 0, R0)
	SRAC (R0, 1, R0)
	ANDC (R0, 32767, R0)
	ST (R0, 0, R1)
	CMOVE (5, R0)
	PUSH (R0)
	BR (release, LP)
	DEALLOCATE (1)
	ST (R0, 0, BP)
	BR (_L34)
_L36:
	LDR (_LC18, R2)
	LDR (_LC18, R0)
	LD (R0, 0, R0)
	SRAC (R0, 1, R0)
	ANDC (R0, 32767, R1)
	LDR (_LC19, R0)
	XOR (R1, R0, R0)
	ST (R0, 0, R2)
	CMOVE (6, R0)
	PUSH (R0)
	BR (release, LP)
	DEALLOCATE (1)
	ST (R0, 0, BP)
_L34:
	LD (BP, 0, R0)
	POP (R2)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC20:
	LONG (v1)

	.align 4
_LC21:
	LONG (v2)

	.align 4
_LC22:
	LONG (alphabet)

	.align 4
workfn:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (2)
	PUSH (R1)
	PUSH (R2)
	PUSH (R3)
	LD (BP, -12, R0)
	MOVE (R31, R1)
	CMPEQ (R0, R1, R0)
	BF (R0, _L39)
	BR (Wait, LP)
	ST (R0, 4, BP)
	BR (_L38)
_L39:
	LDR (_LC20, R2)
	LDR (_LC20, R0)
	CMOVE (7, R1)
	LD (R0, 0, R0)
	SUB (R1, R0, R0)
	ST (R0, 0, R2)
	LD (BP, -12, R1)
	LDR (_LC20, R0)
	LD (R0, 0, R0)
	ST (R0, 4, R1)
	LD (BP, -12, R0)
	ST (R31, 12, R0)
	ST (R31, 0, BP)
_L41:
	LD (BP, 0, R0)
	CMOVE (3, R1)
	CMPLE (R0, R1, R0)
	BT (R0, _L44)
	BR (_L42)
_L44:
	LDR (_LC21, R1)
	LDR (_LC21, R0)
	LD (R0, 0, R0)
	ADDC (R0, 1, R0)
	ST (R0, 0, R1)
	LDR (_LC21, R0)
	LD (R0, 0, R1)
	CMOVE (26, R0)
	CMPLE (R1, R0, R0)
	BT (R0, _L45)
	LDR (_LC21, R1)
	CMOVE (1, R0)
	ST (R0, 0, R1)
_L45:
	LD (BP, -12, R1)
	LD (BP, 0, R0)
	ADD (R1, R0, R3)
	LDR (_LC22, R1)
	LDR (_LC21, R0)
	LD (R0, 0, R0)
	ADD (R1, R0, R0)
	MOVE (R0, R1)
	ANDC (R1, -4, R0)
	LD (R0, 0, R2)
	ANDC (R1, 3, R0)
	MULC (R0, 8, R0)
	SRA (R2, R0, R2)
	ADDC (R3, 16, R0)
	ANDC (R0, -4, R3)
	ANDC (R0, 3, R0)
	MULC (R0, 8, R0)
	CMOVE (255, R1)
	SHL (R2, R0, R2)
	SHL (R1, R0, R0)
	AND (R2, R0, R2)
	XORC (R0, -1, R1)
	LD (R3, 0, R0)
	AND (R0, R1, R0)
	OR (R0, R2, R0)
	ST (R0, 0, R3)
	LD (BP, 0, R0)
	ADDC (R0, 1, R0)
	ST (R0, 0, BP)
	BR (_L41)
_L42:
	LD (BP, -12, R0)
	PUSH (R0)
	BR (qpkt, LP)
	DEALLOCATE (1)
	ST (R0, 4, BP)
_L38:
	LD (BP, 4, R0)
	POP (R3)
	POP (R2)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC23:
	LONG (v1)

	.align 4
_LC24:
	LONG (v2)

	.align 4
handlerfn:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (5)
	PUSH (R1)
	PUSH (R2)
	PUSH (R3)
	LD (BP, -12, R0)
	MOVE (R31, R1)
	CMPEQ (R0, R1, R0)
	BT (R0, _L47)
	LD (BP, -12, R0)
	LD (R0, 8, R1)
	CMOVE (1001, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L48)
	LDR (_LC23, R0)
	ST (R0, 16, BP)
	BR (_L49)
_L48:
	LDR (_LC24, R0)
	ST (R0, 16, BP)
_L49:
	LD (BP, 16, R0)
	PUSH (R0)
	LD (BP, -12, R0)
	PUSH (R0)
	BR (append, LP)
	DEALLOCATE (2)
_L47:
	LDR (_LC23, R0)
	LD (R0, 0, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BT (R0, _L50)
	LDR (_LC23, R0)
	LD (R0, 0, R0)
	ST (R0, 4, BP)
	LD (BP, 4, R0)
	LD (R0, 12, R0)
	ST (R0, 0, BP)
	LD (BP, 0, R1)
	CMOVE (3, R0)
	CMPLE (R1, R0, R0)
	BT (R0, _L51)
	LDR (_LC23, R1)
	LDR (_LC23, R0)
	LD (R0, 0, R0)
	LD (R0, 0, R0)
	ST (R0, 0, R1)
	LD (BP, 4, R0)
	PUSH (R0)
	BR (qpkt, LP)
	DEALLOCATE (1)
	ST (R0, 12, BP)
	BR (_L46)
_L51:
	LDR (_LC24, R0)
	LD (R0, 0, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BT (R0, _L50)
	LDR (_LC24, R0)
	LD (R0, 0, R0)
	ST (R0, 8, BP)
	LDR (_LC24, R1)
	LDR (_LC24, R0)
	LD (R0, 0, R0)
	LD (R0, 0, R0)
	ST (R0, 0, R1)
	LD (BP, 8, R3)
	LD (BP, 4, R1)
	LD (BP, 0, R0)
	ADD (R1, R0, R0)
	ADDC (R0, 16, R1)
	ANDC (R1, -4, R0)
	LD (R0, 0, R2)
	ANDC (R1, 3, R0)
	MULC (R0, 8, R0)
	SRA (R2, R0, R0)
	SHLC (R0, 24, R0)
	SRAC (R0, 24, R0)
	ST (R0, 12, R3)
	LD (BP, 4, R1)
	LD (BP, 0, R0)
	ADDC (R0, 1, R0)
	ST (R0, 12, R1)
	LD (BP, 8, R0)
	PUSH (R0)
	BR (qpkt, LP)
	DEALLOCATE (1)
	ST (R0, 12, BP)
	BR (_L46)
_L50:
	BR (Wait, LP)
	ST (R0, 12, BP)
_L46:
	LD (BP, 12, R0)
	POP (R3)
	POP (R2)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC25:
	LONG (v1)

	.align 4
devfn:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (1)
	PUSH (R1)
	LD (BP, -12, R0)
	MOVE (R31, R1)
	CMPEQ (R0, R1, R0)
	BF (R0, _L54)
	LDR (_LC25, R0)
	LD (R0, 0, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L55)
	BR (Wait, LP)
	ST (R0, 0, BP)
	BR (_L53)
_L55:
	LDR (_LC25, R0)
	LD (R0, 0, R0)
	ST (R0, -12, BP)
	LDR (_LC25, R0)
	ST (R31, 0, R0)
	LD (BP, -12, R0)
	PUSH (R0)
	BR (qpkt, LP)
	DEALLOCATE (1)
	ST (R0, 0, BP)
	BR (_L53)
_L54:
	LDR (_LC25, R0)
	LD (BP, -12, R1)
	ST (R1, 0, R0)
	BR (holdself, LP)
	ST (R0, 0, BP)
_L53:
	LD (BP, 0, R0)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
append:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	PUSH (R1)
	LD (BP, -12, R0)
	ST (R31, 0, R0)
_L58:
	LD (BP, -16, R0)
	LD (R0, 0, R1)
	MOVE (R31, R0)
	CMPEQ (R1, R0, R0)
	BF (R0, _L60)
	BR (_L59)
_L60:
	LD (BP, -16, R0)
	LD (R0, 0, R0)
	ST (R0, -16, BP)
	BR (_L58)
_L59:
	LD (BP, -16, R1)
	LD (BP, -12, R0)
	ST (R0, 0, R1)
	POP (R1)
	POP (BP)
	POP (LP)
	JMP (LP)
	.align 4
_LC26:
        LONG(10000000)
	.align 4
_LC27:
	LONG (idlefn + PC_SUPERVISOR)

	.align 4
_LC28:
	LONG (packets)

	.align 4
_LC29:
	LONG (packets+20)
	.align 4
_LC30:
	LONG (workfn + PC_SUPERVISOR)

	.align 4
_LC31:
	LONG (packets+40)
	.align 4
_LC32:
	LONG (packets+60)
	.align 4
_LC33:
	LONG (packets+80)
	.align 4
_LC34:
	LONG (handlerfn + PC_SUPERVISOR)
        .align 4
_LC35:
	LONG (packets+100)
	.align 4
_LC36:
	LONG (packets+120)
	.align 4
_LC37:
	LONG (packets+140)
	.align 4
_LC38:
	LONG (devfn + PC_SUPERVISOR)

	.align 4
_LC39:
	LONG (tcb)

	.align 4
_LC40:
	LONG (tasklist)

	.align 4
_LC41:
	LONG (qpktcount)

	.align 4
_LC42:
	LONG (holdcount)

	.align 4
_LC43:
	LONG (layout)

	.align 4
main:
	PUSH (LP)
	PUSH (BP)
	MOVE (SP, BP)
	ALLOCATE (2)
	PUSH (R1)
	ST (R31, 0, BP)
	LDR (_LC26, R0)
	PUSH (R0)
	CMOVE (1, R0)
	PUSH (R0)
	LDR (_LC27, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	CMOVE (1, R0)
	PUSH (R0)
	BR (createtask, LP)
	DEALLOCATE (7)
	CMOVE (1001, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LDR (_LC28, R0)
	PUSH (R0)
	BR (pkt, LP)
	DEALLOCATE (4)
	ST (R0, 0, BP)
	CMOVE (1001, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	LDR (_LC29, R0)
	PUSH (R0)
	BR (pkt, LP)
	DEALLOCATE (4)
	ST (R0, 0, BP)
	MOVE (R31, R0)
	PUSH (R0)
	CMOVE (3, R0)
	PUSH (R0)
	LDR (_LC30, R0)
	PUSH (R0)
	CMOVE (3, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	CMOVE (1000, R0)
	PUSH (R0)
	CMOVE (2, R0)
	PUSH (R0)
	BR (createtask, LP)
	DEALLOCATE (7)
	CMOVE (1000, R0)
	PUSH (R0)
	CMOVE (5, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LDR (_LC31, R0)
	PUSH (R0)
	BR (pkt, LP)
	DEALLOCATE (4)
	ST (R0, 0, BP)
	CMOVE (1000, R0)
	PUSH (R0)
	CMOVE (5, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	LDR (_LC32, R0)
	PUSH (R0)
	BR (pkt, LP)
	DEALLOCATE (4)
	ST (R0, 0, BP)
	CMOVE (1000, R0)
	PUSH (R0)
	CMOVE (5, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	LDR (_LC33, R0)
	PUSH (R0)
	BR (pkt, LP)
	DEALLOCATE (4)
	ST (R0, 0, BP)
	MOVE (R31, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LDR (_LC34, R0)
	PUSH (R0)
	CMOVE (3, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	CMOVE (2000, R0)
	PUSH (R0)
	CMOVE (3, R0)
	PUSH (R0)
	BR (createtask, LP)
	DEALLOCATE (7)
	CMOVE (1000, R0)
	PUSH (R0)
	CMOVE (6, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LDR (_LC35, R0)
	PUSH (R0)
	BR (pkt, LP)
	DEALLOCATE (4)
	ST (R0, 0, BP)
	CMOVE (1000, R0)
	PUSH (R0)
	CMOVE (6, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	LDR (_LC36, R0)
	PUSH (R0)
	BR (pkt, LP)
	DEALLOCATE (4)
	ST (R0, 0, BP)
	CMOVE (1000, R0)
	PUSH (R0)
	CMOVE (6, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	LDR (_LC37, R0)
	PUSH (R0)
	BR (pkt, LP)
	DEALLOCATE (4)
	ST (R0, 0, BP)
	MOVE (R31, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LDR (_LC34, R0)
	PUSH (R0)
	CMOVE (3, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	CMOVE (3000, R0)
	PUSH (R0)
	CMOVE (4, R0)
	PUSH (R0)
	BR (createtask, LP)
	DEALLOCATE (7)
	ST (R31, 0, BP)
	MOVE (R31, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LDR (_LC38, R0)
	PUSH (R0)
	CMOVE (2, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	CMOVE (4000, R0)
	PUSH (R0)
	CMOVE (5, R0)
	PUSH (R0)
	BR (createtask, LP)
	DEALLOCATE (7)
	MOVE (R31, R0)
	PUSH (R0)
	MOVE (R31, R0)
	PUSH (R0)
	LDR (_LC38, R0)
	PUSH (R0)
	CMOVE (2, R0)
	PUSH (R0)
	LD (BP, 0, R0)
	PUSH (R0)
	CMOVE (5000, R0)
	PUSH (R0)
	CMOVE (6, R0)
	PUSH (R0)
	BR (createtask, LP)
	DEALLOCATE (7)
	LDR (_LC39, R1)
	LDR (_LC40, R0)
	LD (R0, 0, R0)
	ST (R0, 0, R1)
	LDR (_LC41, R1)
	LDR (_LC42, R0)
	ST (R31, 0, R0)
	ST (R31, 0, R1)
	LDR (_LC43, R0)
	ST (R31, 0, R0)
	BR (schedule, LP)
	LD (BP, 4, R0)
	POP (R1)
	MOVE (BP, SP)
	POP (BP)
	POP (LP)
	JMP (LP)
packets:
	. = .+160
tasks:
	. = .+192
tcb:
	. = .+4
taskid:
	. = .+4
v1:
	. = .+4
v2:
	. = .+4
__start:
	LDR (__StackBase, SP)
	BR (main, LP)
	HALT ()
__StackBase:	LONG (.+4)
        . = .+512
